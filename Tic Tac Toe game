# Create game board #

from IPython.display import clear_output

def display_board(board):
    clear_output()
    print('   |   |')
    print(' '+board[7]+' | '+board[8]+' | '+board[9])
    print('   |   |')
    print('---------')
    print('   |   |')
    print(' '+board[4]+' | '+board[5]+' | '+board[6])
    print('   |   |')
    print('---------')
    print('   |   |')
    print(' '+board[1]+' | '+board[2]+' | '+board[3])
    print('   |   |')
    
# Function to let players choose their marker #

def player_input():
    
    marker = ''
    
    while marker != 'X' and marker != 'O':
        marker = input('Player1: Choose X or O: ').upper()
        
    if marker == 'X':
        return ('X','O')
    else:
        return ('O','X')

# Function to place marker at postion on board #

def place_marker(board, marker, position):
    
    board[position] = marker
    
# Function to check if there is a winner #

def win_check(board, mark):
    
    return ((board[7]==mark and board[8]==mark and board[9]==mark) or
    (board[4]==mark and board[5]==mark and board[6]==mark) or
    (board[1]==mark and board[2]==mark and board[3]==mark) or
    (board[7]==mark and board[4]==mark and board[1]==mark) or
    (board[8]==mark and board[5]==mark and board[2]==mark) or
    (board[9]==mark and board[6]==mark and board[3]==mark) or
    (board[7]==mark and board[5]==mark and board[3]==mark) or
    (board[9]==mark and board[5]==mark and board[1]==mark))
    
# Function to choose person to go first randomly #

import random

def choose_first():
    
    flip = random.randint(0,1)
    
    if flip == 0:
        return 'Player1'
    else:
        return 'Player2'

# Function to check if position is available #

def space_check(board, position):
    
    return board[position] == ' '


# Function to check if board is full #

def full_board_check(board):
    
    for i in range(1,10):
        if space_check(board,i):
            return False
    return True

# Function to ask for players next position and use the place marker function #

def player_choice(board):
    
    position = 0
    
    while position not in [1,2,3,4,5,6,7,8,9] or not space_check(board,position):
        position = int(input('Choose a position: (1-9) '))
        
    return position

# Function to ask if they want to play again #

def replay():
    
    choice = input('Play again? Enter Yes or No')
    
    return choice == 'Yes'
    
# While loop to keep running the game #

print('Welcome to Tic Tac Toe')

while True:
    
    #play game
    
    #set everything up (board,who is first,choose markers)
    the_board = [' ']*10
    player1_marker, player2_marker = player_input()
    
    turn = choose_first()
    print(turn+' will go first')
    
    play_game = input('Ready to play? y or n? ')
    
    if play_game == 'y':
        game_on = True
    else:
        game_on = False
    
    
    #game play
    while game_on:
        
        #player1 turn
        if turn == 'Player1':
    
            #show board
            display_board(the_board)
            
            #choose position
            position = player_choice(the_board)
            
            #place marker on position
            place_marker(the_board,player1_marker,position)
            
            #check win
            if win_check(the_board,player1_marker):
                display_board(the_board)
                print('Player1 wins!')
                game_on = False
                
            #check tie   
            else:
                if full_board_check(the_board):
                    display_board(the_board)
                    print('Tie game')
                    game_on = False
            #no tie or win then next turn
                else:
                    turn = 'Player2'
    
        #player2 turn
        else:
            
            #show board
            display_board(the_board)
            
            #choose position
            position = player_choice(the_board)
            
            #place marker on position
            place_marker(the_board,player2_marker,position)
            
            #check win
            if win_check(the_board,player2_marker):
                display_board(the_board)
                print('Player2 wins!')
                game_on = False
                
            #check tie   
            else:
                if full_board_check(the_board):
                    display_board(the_board)
                    print('Tie game')
                    game_on = False
            #no tie or win then next turn
                else:
                    turn = 'Player1'
    
#break out of loop on replay()   

    if not replay():
        break
